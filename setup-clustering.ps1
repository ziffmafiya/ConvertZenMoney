# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (PowerShell)
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

param(
    [switch]$SkipSupabaseCheck
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
function Test-Command {
    param([string]$Command)
    try {
        Get-Command $Command -ErrorAction Stop | Out-Null
        return $true
    }
    catch {
        return $false
    }
}

Write-ColorOutput "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π" "Cyan"
Write-ColorOutput "==============================================" "Cyan"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if (-not (Test-Command "node")) {
    Write-ColorOutput "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org/" "Red"
    exit 1
} else {
    Write-ColorOutput "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω" "Green"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Supabase CLI
if (-not (Test-Command "supabase")) {
    Write-ColorOutput "‚ùå Supabase CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..." "Yellow"
    npm install -g supabase
} else {
    Write-ColorOutput "‚úÖ Supabase CLI —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Green"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Supabase (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞)
if (-not $SkipSupabaseCheck) {
    Write-ColorOutput "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Supabase..." "Yellow"
    try {
        supabase status | Out-Null
        Write-ColorOutput "‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Supabase" "Green"
    }
    catch {
        Write-ColorOutput "üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Supabase" "Yellow"
        supabase login
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
Write-ColorOutput "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..." "Yellow"
if (-not (Test-Path "supabase/functions/cluster_embeddings")) {
    New-Item -ItemType Directory -Path "supabase/functions/cluster_embeddings" -Force | Out-Null
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
Write-ColorOutput "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..." "Yellow"

$requiredFiles = @(
    "supabase/functions/cluster_embeddings/index.ts",
    "api/cluster-transactions.js",
    "api/get-clustered-transactions.js",
    "cluster-visualization.js",
    "add_cluster_column_function.sql",
    "create_transaction_clusters_table.sql"
)

$allFilesExist = $true
foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-ColorOutput "‚úÖ $file" "Green"
    } else {
        Write-ColorOutput "‚ùå $file - –ù–ï –ù–ê–ô–î–ï–ù" "Red"
        $allFilesExist = $false
    }
}

if (-not $allFilesExist) {
    Write-ColorOutput "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞." "Red"
    exit 1
}

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Edge Function
Write-ColorOutput "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Edge Function..." "Yellow"
try {
    supabase functions deploy cluster_embeddings
    Write-ColorOutput "‚úÖ Edge Function —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞" "Green"
}
catch {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Edge Function" "Red"
    Write-ColorOutput "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π" "Yellow"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..." "Yellow"
try {
    $functions = supabase functions list
    if ($functions -match "cluster_embeddings") {
        Write-ColorOutput "‚úÖ Edge Function –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ" "Green"
    } else {
        Write-ColorOutput "‚ùå Edge Function –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ" "Red"
        exit 1
    }
}
catch {
    Write-ColorOutput "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π" "Yellow"
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–æ–≤
Write-ColorOutput "üóÑÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–æ–≤..." "Yellow"
Write-ColorOutput "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ SQL –∫–æ–º–∞–Ω–¥—ã –≤ Supabase SQL Editor:" "Yellow"
Write-Host ""
Write-ColorOutput "1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏:" "Cyan"
Write-ColorOutput "   \i add_cluster_column_function.sql" "White"
Write-Host ""
Write-ColorOutput "2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–ª–∞—Å—Ç–µ—Ä–æ–≤ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç):" "Cyan"
Write-ColorOutput "   \i create_transaction_clusters_table.sql" "White"
Write-Host ""
Write-ColorOutput "3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ cluster_id –≤ —Ç–∞–±–ª–∏—Ü—É transactions:" "Cyan"
Write-ColorOutput "   SELECT add_cluster_column_if_not_exists();" "White"
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-ColorOutput "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..." "Yellow"
$envVars = @("SUPABASE_URL", "SUPABASE_ANON_KEY", "SUPABASE_SERVICE_ROLE_KEY")

foreach ($var in $envVars) {
    if ([string]::IsNullOrEmpty([Environment]::GetEnvironmentVariable($var))) {
        Write-ColorOutput "‚ö†Ô∏è  $var –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Yellow"
    } else {
        Write-ColorOutput "‚úÖ $var —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "Green"
    }
}

Write-Host ""
Write-ColorOutput "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" "Cyan"
Write-ColorOutput "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Supabase Dashboard" "White"
Write-ColorOutput "2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç—ã –≤ Supabase SQL Editor" "White"
Write-ColorOutput "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" "White"
Write-ColorOutput "4. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–∫—Ü–∏—é '–ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π'" "White"
Write-Host ""

Write-ColorOutput "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" "Green"
Write-Host ""
Write-ColorOutput "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: CLUSTERING_README.md" "Cyan" 