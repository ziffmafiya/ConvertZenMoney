export interface HDBSCANParams {
    debugMode?: boolean;
    minClusterSize?: number;
    minSamples?: number;
    alpha?: number;
    metric?: "euclidean";
    algorithm?: "best" | "generic" | "prims";
    leafSize?: number;
    shouldSkipRootCluster?: boolean;
}
export declare class HDBSCAN {
    private debugMode;
    private minClusterSize;
    private minSamples;
    labels_: number[];
    probabilities_: number[];
    private clusterMap;
    private nextClusterId;
    private sortedEdges;
    private shouldSkipRootCluster;
    private mutualReachabilityDistance;
    constructor({ minClusterSize, minSamples, debugMode, shouldSkipRootCluster }?: HDBSCANParams);
    private computeMutualReachabilityDistance;
    private buildMinimumSpanningTree;
    private buildClusterHierarchy;
    private createCluster;
    private splitClusterAtEdge;
    private find;
    private condenseHierarchy;
    private extractClusters;
    private calculateClusterStability;
    private assignClusterLabels;
    private getClusterPoints;
    private calculateMembership;
    private getMinReachability;
    private findClusterContainingPoints;
    fit(data: number[][]): number[];
    private log;
}
