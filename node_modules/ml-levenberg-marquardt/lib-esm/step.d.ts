/**
 * Iteration for Levenberg-Marquardt
 * @ignore
 * @param {{x:ArrayLike<number>, y:ArrayLike<number>}} data - Array of points to fit in the format [x1, x2, ... ], [y1, y2, ... ]
 * @param {Array<number>} params - Array of previous parameter values
 * @param {number} damping - Levenberg-Marquardt parameter
 * @param {number|array} gradientDifference - The step size to approximate the jacobian matrix
 * @param {boolean} centralDifference - If true the jacobian matrix is approximated by central differences otherwise by forward differences
 * @param {function} parameterizedFunction - The parameters and returns a function with the independent variable as a parameter
 */
export default function step(data: {
    x: ArrayLike<number>;
    y: ArrayLike<number>;
}, params: Array<number>, damping: number, gradientDifference: number | any[], parameterizedFunction: Function, centralDifference: boolean, weights: any): {
    perturbations: Matrix;
    jacobianWeightResidualError: Matrix;
};
import { Matrix } from 'ml-matrix';
//# sourceMappingURL=step.d.ts.map