import { levenbergMarquardt } from 'ml-levenberg-marquardt';
import { OptimizationOptions } from '../index';
import { directOptimization } from './wrappers/directOptimization';
/** Algorithm to select the method.
 * @param optimizationOptions - Optimization options
 * @returns - The algorithm and optimization options
 */
export declare function selectMethod(optimizationOptions?: OptimizationOptions): {
    algorithm: typeof levenbergMarquardt;
    optimizationOptions: {
        damping: number;
        maxIterations: number;
        errorTolerance: number;
    } | {
        epsilon?: number;
        tolerance?: number;
        tolerance2?: number;
        initialState?: any;
        maxIterations: number;
        damping: number;
        errorTolerance: number;
    } | {
        timeout?: number;
        damping: number;
        errorTolerance: number;
        maxIterations: number;
    };
} | {
    algorithm: typeof directOptimization;
    optimizationOptions: {
        iterations: number;
        epsilon: number;
        tolerance: number;
        tolerance2: number;
        initialState: {};
    } | {
        epsilon: number;
        tolerance: number;
        tolerance2: number;
        initialState: any;
        maxIterations?: number;
        iterations: number;
    } | {
        timeout?: number;
        damping?: number;
        errorTolerance?: number;
        maxIterations?: number;
        iterations: number;
        epsilon: number;
        tolerance: number;
        tolerance2: number;
        initialState: {};
    };
};
//# sourceMappingURL=selectMethod.d.ts.map