import { GetData1DOptions } from '../GetData1DOptions';
import { Parameter, Shape1DClass } from '../Shape1DClass';
export interface PseudoVoigtClassOptions {
    /**
     * Full width at half maximum.
     * @default 500
     */
    fwhm?: number;
    /**
     * Ratio of gaussian contribution in the shape
     * @default 0.5
     */
    mu?: number;
}
interface GetPseudoVoigtAreaOptions {
    /**
     * The maximum intensity value of the shape
     * @default 1
     */
    height?: number;
    /**
     * Full width at half maximum.
     * @default 500
     */
    fwhm?: number;
    /**
     * Ratio of gaussian contribution in the shape
     * @default 0.5
     */
    mu?: number;
}
interface CalculatePseudoVoightHeightOptions {
    /**
     * @default 1
     */
    fwhm?: number;
    /**
     * @default 0.5
     */
    mu?: number;
    /**
     * @default 1
     */
    area?: number;
}
export declare class PseudoVoigt implements Shape1DClass {
    fwhm: number;
    /**
     * Ratio of gaussian contribution in the shape
     * @default 0.5
     */
    mu: number;
    constructor(options?: PseudoVoigtClassOptions);
    fwhmToWidth(fwhm?: number, mu?: number): number;
    widthToFWHM(width: number, mu?: number): number;
    fct(x: number): number;
    getArea(height?: number): number;
    getFactor(area?: number): number;
    getData(options?: GetData1DOptions): Float64Array;
    calculateHeight(area?: number): number;
    getParameters(): Parameter[];
}
export declare const calculatePseudoVoigtHeight: (options?: CalculatePseudoVoightHeightOptions) => number;
export declare const pseudoVoigtFct: (x: number, fwhm: number, mu: number) => number;
export declare const pseudoVoigtWidthToFWHM: (width: number, mu?: number) => number;
export declare const pseudoVoigtFwhmToWidth: (fwhm: number, mu?: number) => number;
export declare const getPseudoVoigtArea: (options: GetPseudoVoigtAreaOptions) => number;
export declare const getPseudoVoigtFactor: (area?: number, mu?: number) => number;
export declare const getPseudoVoigtData: (shape?: PseudoVoigtClassOptions, options?: GetData1DOptions) => Float64Array;
export {};
