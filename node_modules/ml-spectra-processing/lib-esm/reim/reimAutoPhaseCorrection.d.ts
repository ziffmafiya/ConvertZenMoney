import type { DataReIm } from '../types';
export interface AutoPhaseCorrectionOptions {
    /**
     * if true it uses magnitude spectrum.boolean
     * @default true
     */
    magnitudeMode?: boolean;
    /**
     * min number of points to auto phase a region
     * @default 30
     */
    minRegSize?: number;
    /**
     * max distance between regions (in number of points) to join two regions
     * @default 256
     */
    maxDistanceToJoin?: number;
    /**
     * scale the cutoff like factorStd * noiseLevel
     * @default 3
     */
    factorNoise?: number;
    /**
     * Apply the phase correction from the last element of the array
     * @default false
     */
    reverse?: boolean;
}
/**
 * Implementation of the algorithm for automatic phase correction: A robust, general automatic phase
 * correction algorithm for high-resolution NMR data. 10.1002/mrc.4586
 * @param data - complex spectrum
 * @param options - options
 */
export declare function reimAutoPhaseCorrection(data: DataReIm, options?: AutoPhaseCorrectionOptions): {
    data: DataReIm<Float64Array>;
    ph0: number;
    ph1: number;
};
//# sourceMappingURL=reimAutoPhaseCorrection.d.ts.map