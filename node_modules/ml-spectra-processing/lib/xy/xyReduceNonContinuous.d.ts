import type { DataXY, DoubleArray, FromTo } from 'cheminfo-types';
export interface XYReduceOptions {
    /**
     * @default x[0]
     */
    from?: number;
    /**
     * @default x[x.length-1]
     */
    to?: number;
    /**
     * Number of points but we could have couple more
     * @default 4001
     */
    maxApproximateNbPoints?: number;
    /**
     * Array of zones to keep (from/to object)
     * @default []
     */
    zones?: FromTo[];
}
/**
 * Reduce the number of points while keeping visually the same noise. Practical to
 * display many spectra as SVG. This algorithm is designed for non-continuous data.
 * We are expecting peaks to be only positive and the x values to be ordered.
 * SHOULD NOT BE USED FOR DATA PROCESSING !!!
 * @param data - Object that contains property x (an ordered increasing array) and y (an array)
 * @param options - options
 * @returns Object with x and y arrays
 */
export declare function xyReduceNonContinuous(data: DataXY, options?: XYReduceOptions): DataXY<DoubleArray>;
//# sourceMappingURL=xyReduceNonContinuous.d.ts.map