import { isAnyArray } from 'is-any-array';
import arrayMean from 'ml-array-mean';

function variance(values) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!isAnyArray(values)) {
    throw new TypeError('input must be an array');
  }

  var _options$unbiased = options.unbiased,
      unbiased = _options$unbiased === void 0 ? true : _options$unbiased,
      _options$mean = options.mean,
      mean = _options$mean === void 0 ? arrayMean(values) : _options$mean;
  var sqrError = 0;

  for (var i = 0; i < values.length; i++) {
    var x = values[i] - mean;
    sqrError += x * x;
  }

  if (unbiased) {
    return sqrError / (values.length - 1);
  } else {
    return sqrError / values.length;
  }
}

export { variance as default };
